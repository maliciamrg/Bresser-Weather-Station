sudo apt-get update && sudo apt-get upgrade -y

apt-get install lighttpd

systemctl start lighttpd
systemctl enable lighttpd

systemctl status lighttpd


sudo apt install php php-cgi php-cli php-fpm php-curl php-gd php-mysql php-mbstring zip unzip

php --version


https://www.linuxshelltips.com/install-lighttpd-in-ubuntu/

$ sudo nano /etc/php/8.1/fpm/pool.d/www.conf
Comment out the initial listen = /run/php/php8.1-fpm.sock value and set it to listen = 127.0.0.1:9000 as shown.

$ sudo nano /etc/lighttpd/conf-available/15-fastcgi-php.conf
"bin-path" to "host" => "127.0.0.1"
"socket" to "port" = > "9000"

$ sudo lighty-enable-mod fastcgi
$ sudo lighty-enable-mod fastcgi-php

$ sudo systemctl restart lighttpd php8.1-fpm


$ sudo apt curl
$ cd ~
$ curl -sS https://getcomposer.org/installer -o composer-setup.php
$ HASH=`curl -sS https://composer.github.io/installer.sig`
$ php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

You should see "Installer verified". Now install and move composer to a global location "/usr/local/bin":
$ sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer

When successfully installed, you should see the following:
All settings correct for using Composer
Downloading...

Composer (version 1.10.5) successfully installed to: /usr/local/bin/composer
Use it: php /usr/local/bin/composer

We now need to create the folder for the Weather Station redirect and for the installation of PHP-MQTT:
$ cd
$ cd /var/www/html
$ mkdir weatherstation
$ cd weatherstation

** It's important you stay in the "weatherstation" folder! **

$ composer require php-mqtt/client

You should get a success message or similar once installed. You should see the folder "vendor" within "Weatherstation".

Next create a PHP file called "updateweatherstation.php" and put the below contents within it remebering to update it with your MQTT server details!

--------------------------------------------
<?php

require_once '/var/www/html/weatherstation/vendor/autoload.php';

use PhpMqtt\Client\Exceptions\ConnectingToBrokerFailedException;
use PhpMqtt\Client\Exceptions\DataTransferException;
use PhpMqtt\Client\Exceptions\UnexpectedAcknowledgementException;
use PhpMqtt\Client\MqttClient;

$server = "192.168.1.205";
$port = 1883;
$client_id = "weather-data-publisher";
$mqttRoot = "pws/sensors/";

// This is for WOW Met Office Only
$siteid = "SITE ID HERE";
$authenticationpin = "AUTHENTICATION PIN HERE";

$winddir = $_GET["winddir"];
$wspeed = $_GET["windspeedmph"];
$wgust = $_GET["windgustmph"];
$hum = $_GET["humidity"];
$dew = $_GET["dewptf"];
$temp = $_GET["tempf"];
$rainhour = $_GET["rainin"];
$rainday = $_GET["dailyrainin"];
$baro = $_GET["baromin"];

function RoundIt($ee){
  return round($ee, 2);
}
function toKM( $a) {
  return  RoundIt( floatval($a)*1.60934);
}
function toC( $a) {
  return RoundIt(  (floatval($a)-32) * (5/9) );
}
function toMM( $a) {
    return RoundIt( floatval($a)*25.4);
}
  
function toHPA( $a) {
  return RoundIt((floatval($a)*33.8639));
}

function wind_cardinal( $degree ) { 
  switch( $degree ) {
      case ( $degree >= 348.75 && $degree <= 360 ):
          $cardinal = "N";
      break;
      case ( $degree >= 0 && $degree <= 11.249 ):
          $cardinal = "N";
      break;
      case ( $degree >= 11.25 && $degree <= 33.749 ):
          $cardinal = "NNE";
      break;
      case ( $degree >= 33.75 && $degree <= 56.249 ):
          $cardinal = "NE";
      break;
      case ( $degree >= 56.25 && $degree <= 78.749 ):
          $cardinal = "ENE";
      break;
      case ( $degree >= 78.75 && $degree <= 101.249 ):
          $cardinal = "E";
      break;
      case ( $degree >= 101.25 && $degree <= 123.749 ):
          $cardinal = "ESE";
      break;
      case ( $degree >= 123.75 && $degree <= 146.249 ):
          $cardinal = "SE";
      break;
      case ( $degree >= 146.25 && $degree <= 168.749 ):
          $cardinal = "SSE";
      break;
      case ( $degree >= 168.75 && $degree <= 191.249 ):
          $cardinal = "S";
      break;
      case ( $degree >= 191.25 && $degree <= 213.749 ):
          $cardinal = "SSW";
      break;
      case ( $degree >= 213.75 && $degree <= 236.249 ):
          $cardinal = "SW";
      break;
      case ( $degree >= 236.25 && $degree <= 258.749 ):
          $cardinal = "WSW";
      break;
      case ( $degree >= 258.75 && $degree <= 281.249 ):
          $cardinal = "W";
      break;
      case ( $degree >= 281.25 && $degree <= 303.749 ):
          $cardinal = "WNW";
      break;
      case ( $degree >= 303.75 && $degree <= 326.249 ):
          $cardinal = "NW";
      break;
      case ( $degree >= 326.25 && $degree <= 348.749 ):
          $cardinal = "NNW";
      break;
      default:
          $cardinal = null;
  }
 return $cardinal;
}

// Send it to MQTT
$mqtt = new MqttClient($server, $port, $client_id);
$mqtt->connect();

$mqtt->publish($mqttRoot .'baromin', toHPA($_GET["baromin"]), 0);
$mqtt->publish($mqttRoot .'temp', toC($_GET["tempf"]), 0);
$mqtt->publish($mqttRoot .'dewpt', toC($_GET["dewptf"]), 0);
$mqtt->publish($mqttRoot .'humidity', $_GET["humidity"], 0);
$mqtt->publish($mqttRoot .'windspeedkph', toKM($_GET["windspeedmph"]), 0);
$mqtt->publish($mqttRoot .'windgustkph', toKM($_GET["windgustmph"]), 0);

// Use this WindDir if you want wind direction as per a compass
// $mqtt->publish($mqttRoot .'winddir',wind_cardinal( $_GET["winddir"]), 0);

// Use this WindDir if you want wind direction in degrees
$mqtt->publish($mqttRoot .'winddirection', $_GET["winddir"], 0);

$mqtt->publish($mqttRoot .'rainmm', toMM($_GET["rainin"]), 0);
$mqtt->publish($mqttRoot .'dailyrainmm', toMM($_GET["dailyrainin"]), 0);
$mqtt->publish($mqttRoot .'indoortemp', toC($_GET["indoortempf"]), 0);
$mqtt->publish($mqttRoot .'indoorhumidity', $_GET["indoorhumidity"], 0);

$mqtt->disconnect();

// POST TO WU
$xml = file_get_contents("http://pws-ingest-use1-01.sun.weather.com/weatherstation/updateweatherstation.php?".$_SERVER['QUERY_STRING']);


// POST TO WOW MET OFFICE
$xml = file_get_contents("http://wow.metoffice.gov.uk/automaticreading?siteid={$siteid}&siteAuthenticationKey={$authenticationpin}&dateutc=now&winddir={$winddir}&windspeedmph={$wspeed}&windgustmph={$wgust}&humidity={$hum}&dewptf={$dew}&tempf={$temp}&rainin={$rainhour}&dailyrainin={$rainday}&baromin={$baro}&softwaretype=WOW+PHP+v1");

?>
success
--------------------------------------------

Now upload this file via FTP to '/var/www/html/weatherstation'.

Your weather station should now push data to your XAMPP Web Server and also repubish the data to WU and WOW.
